// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectPRN222.Models;

#nullable disable

namespace ProjectPRN222.Migrations
{
    [DbContext(typeof(QuizOnlineContext))]
    [Migration("20250704153710_InitSyncWithDb")]
    partial class InitSyncWithDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectPRN222.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__46A222CD9DB5C5FA");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__D54EE9B47931DE62");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lesson_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<string>("LessonContent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lesson_content");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lesson_name");

                    b.Property<int>("LessonOrder")
                        .HasColumnType("int")
                        .HasColumnName("lesson_order");

                    b.Property<int>("LessonTopicId")
                        .HasColumnType("int")
                        .HasColumnName("lesson_topic_id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("summary");

                    b.HasKey("LessonId")
                        .HasName("PK__Lesson__6421F7BEF36EA832");

                    b.HasIndex("LessonTopicId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lesson", (string)null);

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ProjectPRN222.Models.LessonTopic", b =>
                {
                    b.Property<int>("LessonTopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lesson_topic_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonTopicId"));

                    b.Property<string>("LessonTopicName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lesson_topic_name");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.HasKey("LessonTopicId")
                        .HasName("PK__Lesson_T__F92C2D0096E4A20B");

                    b.HasIndex("SubjectId");

                    b.ToTable("Lesson_Topic", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("package_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("package_name");

                    b.Property<float>("SalePrice")
                        .HasColumnType("real")
                        .HasColumnName("salePrice");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.HasKey("PackageId")
                        .HasName("PK__Package__63846AE829E6F33B");

                    b.HasIndex("SubjectId");

                    b.ToTable("Package", (string)null);

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("registration_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<int>("PackageId")
                        .HasColumnType("int")
                        .HasColumnName("package_id");

                    b.Property<DateTime>("RegistrationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("registration_time");

                    b.Property<float>("SalePrice")
                        .HasColumnType("real")
                        .HasColumnName("sale_price");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<DateOnly>("ValidFrom")
                        .HasColumnType("date")
                        .HasColumnName("valid_from");

                    b.Property<DateOnly>("ValidTo")
                        .HasColumnType("date")
                        .HasColumnName("valid_to");

                    b.HasKey("RegistrationId")
                        .HasName("PK__Registra__22A298F6EFDDD144");

                    b.HasIndex("AccountId");

                    b.HasIndex("PackageId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Registration", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.RegistrationStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_name");

                    b.HasKey("StatusId")
                        .HasName("PK__Registra__3683B531A9126D98");

                    b.ToTable("Registration_Status", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__760965CC28176FF1");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("subject_name");

                    b.Property<string>("Tagline")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tagline");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("thumbnail");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subject__5004F660C4C1CAAD");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.TokenForgetPassword", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime")
                        .HasColumnName("expiryTime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit")
                        .HasColumnName("isUsed");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token");

                    b.HasIndex("AccountId");

                    b.ToTable("TokenForgetPassword", (string)null);
                });

            modelBuilder.Entity("ProjectPRN222.Models.Account", b =>
                {
                    b.HasOne("ProjectPRN222.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FKAccount312752");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Lesson", b =>
                {
                    b.HasOne("ProjectPRN222.Models.LessonTopic", "LessonTopic")
                        .WithMany("Lessons")
                        .HasForeignKey("LessonTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKLesson811441");

                    b.HasOne("ProjectPRN222.Models.Subject", "Subject")
                        .WithMany("Lessons")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FKLesson125338");

                    b.Navigation("LessonTopic");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ProjectPRN222.Models.LessonTopic", b =>
                {
                    b.HasOne("ProjectPRN222.Models.Subject", "Subject")
                        .WithMany("LessonTopics")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Lesson_Topic_Subject");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Package", b =>
                {
                    b.HasOne("ProjectPRN222.Models.Subject", "Subject")
                        .WithMany("Packages")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKPackage916382");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Registration", b =>
                {
                    b.HasOne("ProjectPRN222.Models.Account", "Account")
                        .WithMany("Registrations")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FKRegistrati648261");

                    b.HasOne("ProjectPRN222.Models.Package", "Package")
                        .WithMany("Registrations")
                        .HasForeignKey("PackageId")
                        .IsRequired()
                        .HasConstraintName("FKRegistrati736102");

                    b.HasOne("ProjectPRN222.Models.RegistrationStatus", "Status")
                        .WithMany("Registrations")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FKRegistrati334529");

                    b.HasOne("ProjectPRN222.Models.Subject", "Subject")
                        .WithMany("Registrations")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FKRegistrati472927");

                    b.Navigation("Account");

                    b.Navigation("Package");

                    b.Navigation("Status");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Subject", b =>
                {
                    b.HasOne("ProjectPRN222.Models.Account", "Account")
                        .WithMany("Subjects")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FKSubject564919");

                    b.HasOne("ProjectPRN222.Models.Category", "Category")
                        .WithMany("Subjects")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FKSubject483897");

                    b.Navigation("Account");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProjectPRN222.Models.TokenForgetPassword", b =>
                {
                    b.HasOne("ProjectPRN222.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FKTokenForge559928");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Account", b =>
                {
                    b.Navigation("Registrations");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Category", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("ProjectPRN222.Models.LessonTopic", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Package", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("ProjectPRN222.Models.RegistrationStatus", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ProjectPRN222.Models.Subject", b =>
                {
                    b.Navigation("LessonTopics");

                    b.Navigation("Lessons");

                    b.Navigation("Packages");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
