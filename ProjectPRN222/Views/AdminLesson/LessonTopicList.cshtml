 @using ProjectPRN222.Models
 @model List<LessonTopic>
@{
    ViewData["Title"] = "Admin Lesson Topic List";
    Layout = "_AdminLayout";
}
@section Styles {
    <style>

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            border-radius: 8px;
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 15px;
        }

            .header h1 {
                font-size: 24px;
                color: #333;
            }

            .header nav button {
                margin-left: 10px;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }

        .btn-blue {
            background-color: #007bff;
            color: white;
        }

        .btn-orange {
            background-color: #ff5722;
            color: white;
        }

        .tab-menu {
            display: flex;
            border-bottom: 2px solid #ccc;
            margin-bottom: 20px;
        }

            .tab-menu button {
                flex: 1;
                padding: 10px;
                background-color: white;
                border: none;
                cursor: pointer;
                font-size: 16px;
                color: #666;
                border-bottom: 4px solid transparent;
            }

                .tab-menu button.active {
                    color: #5a2fc2;
                    font-weight: bold;
                    border-bottom-color: #5a2fc2;
                }

        .status {
            padding: 5px 10px;
            border-radius: 12px;
            font-size: 14px;
            text-align: center;
        }

        .status-published {
            background-color: #d4edda;
            color: #155724;
        }

        .status-unpublished {
            background-color: #f8d7da;
            color: #721c24;
        }

        #success-message {
            display: none;
        }
    </style>
}
<div class="wrapper" data-theme="default" data-layout="fluid" data-sidebar-position="left" data-sidebar-layout="default">

    @await Html.PartialAsync("AdminSideBar")

    <div class="main">

        @if (ViewBag.ShowSuccessMessage == true)
        {
            <div id="success-message" class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <div class="alert-message">
                    <strong>Changes saved!</strong> Lesson has been deleted
                </div>
            </div>
        }

        <main class="content">
            <div class="header">
                <h1>Lesson Topic List</h1>
                <nav>
                    <a href="@Url.Action("AddLessonTopic","AdminLesson",new { subject_id = ViewBag.SubjectId })" class="btn btn-orange">
                        New Lesson Topic <i class="align-middle" data-feather="plus-circle"></i>
                    </a>
                    <a href="@Url.Action("Index","AdminSubject")" class="btn btn-success"  style="margin: 0">
                        Back <i class="align-middle" data-feather="corner-up-left"></i>
                    </a>
                </nav>
            </div>

            <div class="container">
                <table id="questionTable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Lesson Topic ID</th>
                            <th>Lesson Topic Name</th>
                            <th>Number of Lessons</th>
                            <th>Lesson List</th>
                            <th>Option</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (LessonTopic lesson in Model)
                        {
                            <tr>
                                <td>@lesson.LessonTopicId</td>
                                <td>@lesson.LessonTopicName</td>
                                <td>
                                    @(lesson.Lessons.Count)
                                </td>
                                <td>
                                    <a href="@Url.Action("LessonList","AdminLesson", new { subject_id = ViewBag.SubjectId, lesson_topic_id = lesson.LessonTopicId })" class="btn btn-success">
                                        @lesson.Lessons?.Count <i class="align-middle" data-feather="list"></i>
                                    </a>
                                </td>
                                <td style="width: 120px">
                                    <a href="@Url.Action("AddLessonTopic","AdminLesson", new {subject_id = ViewBag.SubjectId , lesson_topic_id = lesson.LessonTopicId})" class="btn btn-success">
                                        <i class="align-middle" data-feather="edit"></i>
                                    </a>
                                    <button type="button" class="btn btn-danger"
                                            onclick="if (confirm('Are you sure you want to delete this lesson topic?')) { window.location.href='@Url.Action("DoDeleteLessonTopic", new { lesson_topic_id = lesson.LessonTopicId, subject_id = ViewBag.SubjectId })'; }">
                                        <i class="align-middle" data-feather="trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </main>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#questionTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const message = document.getElementById('success-message');

            if (message) {
                message.style.display = 'block';
                message.style.opacity = 1;

                setTimeout(() => {
                    let opacity = 1;
                    const interval = setInterval(() => {
                        if (opacity <= 0) {
                            clearInterval(interval);
                            message.style.display = 'none';
                        } else {
                            opacity -= 0.05;
                            message.style.opacity = opacity;
                        }
                    }, 50);
                }, 1000);
            }
        });
    </script>
}
